[
  {
    "objectID": "Refresh2.html",
    "href": "Refresh2.html",
    "title": "Refresh2",
    "section": "",
    "text": "This is an R Refresher adapted from Weisberg (2014) We will use packages ggplot2, knitr, dplyr and tidyr"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Lecture 1: Let’s start with a quick R Refresher https://stats101a.github.io/RRefresher.html\nLecture 2: And professional story telling with data https://stats101a.github.io/StoryTelling.html"
  },
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "EDA",
    "section": "",
    "text": "Exploratory data analysis involves the use of graphics, summaries and transformations to better understand the data and answer our questions.\nExploratory methods, make few assumptions about the distributional shape of the data.\nOur results can help us refine our questions or develop new ones.\n\nHere’s what Wickham says in “R for Data Science”: (page 82)\n\nYour goal during EDA is to develop an understanding of your data. The easiest way to do this is to use questions as tools to guide your investigation. When you ask a question, the question focuses your attention on a specific part of your dataset and helps you decide which graphs, models, or transformations to make.\n\nThere are no “real” rules here, but the data I’m using today comes from a competition, so obviously winning was (the competition is closed) the goal. But to win, it was important to focus on two things\n\nVariation\nCovariation\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nThis example is taken from Kaggle Shelter Outcomes https://www.kaggle.com/c/shelter-animal-outcomes\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nA .gz or a .zip is a compressed file. Compression saves space on our machines. The functions in readr can read those directly (some functions require decompression first)\n\nThe dataset train contains the following variables, take a look:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nmore compactly\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "EDA.html#loading-libraries",
    "href": "EDA.html#loading-libraries",
    "title": "EDA",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "EDA.html#case-study",
    "href": "EDA.html#case-study",
    "title": "EDA",
    "section": "",
    "text": "This example is taken from Kaggle Shelter Outcomes https://www.kaggle.com/c/shelter-animal-outcomes\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nA .gz or a .zip is a compressed file. Compression saves space on our machines. The functions in readr can read those directly (some functions require decompression first)\n\nThe dataset train contains the following variables, take a look:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nmore compactly\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "activity/RRefresher.html",
    "href": "activity/RRefresher.html",
    "title": "R Refresher",
    "section": "",
    "text": "This is an R Refresher adapted from Weisberg (2014) We will use packages ggplot2, knitr, dplyr and tidyr"
  },
  {
    "objectID": "activity/RRefresher.html#slices-slicing",
    "href": "activity/RRefresher.html#slices-slicing",
    "title": "R Refresher",
    "section": "slices, slicing",
    "text": "slices, slicing\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "activity/RRefresher.html#slice_head",
    "href": "activity/RRefresher.html#slice_head",
    "title": "R Refresher",
    "section": "slice_head()",
    "text": "slice_head()\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "activity/RRefresher.html#summariseacross",
    "href": "activity/RRefresher.html#summariseacross",
    "title": "R Refresher",
    "section": "summarise(across)",
    "text": "summarise(across)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "activity/RRefresher.html#descriptive-basics-challenge",
    "href": "activity/RRefresher.html#descriptive-basics-challenge",
    "title": "R Refresher",
    "section": "descriptive basics challenge",
    "text": "descriptive basics challenge\nA challenge (and practice working with webR), in teams, please compute the following for the variable birth_year in the starwars data:\n\nthe first and third quartiles\na decile (e.g., 90th percentile)\nthe number of missing values\nand a count (number) of unique birth years\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "activity/RRefresher.html#conditioninggrouping",
    "href": "activity/RRefresher.html#conditioninggrouping",
    "title": "R Refresher",
    "section": "conditioning/grouping",
    "text": "conditioning/grouping\nWe will use more of this later in the course, but for now, you should possess these fundamental data handling skills:\nusing dplyr with a little tidyr\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIf we were to stop after the summarize() below we would have a “long”/“tall” result suitable for data visualization and other functions, but it’s a little difficult to make comparisons as tabled results:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nBy using .groups = “drop” and a pivot_wider() (from tidyr) we arrive at a comparable outcome, notice the missing categories:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe will delve into more data handling in the future."
  },
  {
    "objectID": "activity/RRefresher.html#locally",
    "href": "activity/RRefresher.html#locally",
    "title": "R Refresher",
    "section": "locally",
    "text": "locally\nThis is the general format for reading data in base R (won’t run on this website, you’ll need to try it in R on your own computer)\nmy_data0 &lt;- read.table(\"filename\", header=TRUE,\nna.strings=\"NA\", sep = \"\")\nThere are modifications to this basic code, for example, read.csv() is just a alias of read.table() with sep = “,” as a default. We can use it in concert with file.choose() to allow you to select files from your local drive (won’t work here, just an example)\nmy_data1 &lt;- read.csv(file.choose(), header=TRUE,\nna.strings=\"NA\")"
  },
  {
    "objectID": "activity/RRefresher.html#remotely",
    "href": "activity/RRefresher.html#remotely",
    "title": "R Refresher",
    "section": "remotely",
    "text": "remotely\nWe can also read data from a website, note the use of read.table() with sep = “,”:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnother good first step involves examining the structure of the object:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThis will help identify numeric and non-numeric data.\nWe could load an additional package, readr, to allow us to read additional data formats such as Excel files (this is something you can do in section or in an assignment)"
  },
  {
    "objectID": "activity/RRefresher.html#examples",
    "href": "activity/RRefresher.html#examples",
    "title": "R Refresher",
    "section": "Examples",
    "text": "Examples\nnormal\nThe normal distribution’s root is “norm”. The function pnorm() takes a quantile and returns a probability of observing a value less than or equal to 1.96 in a standard normal distribution:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe can change the pnorm defaults to accommodate a different situation, here, SAT scores combined math/verbal:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nqnorm() answers the question - given a probability what is the value of the associated quantile?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\ndnorm() - returns the height of the probability density function at points specified by the programmer. In the normal distribution, points farther from the mean have lower density\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nt\nThere are other distributions with different root names, but the same four letter identifier holds\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nchi-square\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nan additional density example and our bridge to visualization\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTest yourself/your team\nPlease try generating values from another distribution (e.g., F, Poisson), you can find a longer list of distributions here: https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Distributions.html\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "activity/RRefresher.html#five-minute-ggplot-refresher",
    "href": "activity/RRefresher.html#five-minute-ggplot-refresher",
    "title": "R Refresher",
    "section": "Five minute ggplot refresher",
    "text": "Five minute ggplot refresher\nIf there is only one package you need in R, it’s ggplot. It’s simple and logical and flows with data beautifully. We can use penguins from the palmerpenguins library.\nggplot needs to know what data you plan to use and it needs to have an aesthetic (aes) specified.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNo error, but no graphic. All we have done is specified the data and given ggplot a sense of how the graphic should appear (x, y, color) as it relates to the features.\nBut adding a geom_ tells ggplot how the features should be plotted.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe “+” separates “layers”. Think of ggplot as like making a cake, you lay down the foundation and then you start decorating by adding additional layers. Note that the color aesthetic could (should?) appear in the geom_ layer:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIt’s important to put it in the geom_ layer if you plan to use multiple geoms in your graphic.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nI do recommend you learn how to “facet” (condition) your ggplot:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nread “as a function of island”, if you wanted island on the rows, move to facet_grid()\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\na better use of facet_grid is to use multiple variables:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe remaining functions in the ggplot2 package modify appearance with labels, legends and themes:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTest yourself/your team\nTry to create a scatterplot with a single regression line plotted and the points colored. Something like:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lec/examples.html#interact-relax",
    "href": "lec/examples.html#interact-relax",
    "title": "Lecture 1",
    "section": "Interact & Relax",
    "text": "Interact & Relax\nLet’s use this time to interact & relax before getting started\n\n\nPlease gather in small groups (minimum 3 classmates, maximum 6)\nIf you don’t know someone please introduce yourself\nIf your group sees someone without a group, please extend an invitation to join"
  },
  {
    "objectID": "lec/examples.html#highlight-and-black-background",
    "href": "lec/examples.html#highlight-and-black-background",
    "title": "Lecture 1",
    "section": "Highlight and black background",
    "text": "Highlight and black background\n\n```{r}\n#| eval: false\n#| code-line-numbers: \"4|5|6\"\nx &lt;- 1:10\nx\nLETTERS[x]\n```"
  },
  {
    "objectID": "lec/examples.html#load-packages",
    "href": "lec/examples.html#load-packages",
    "title": "Lecture 1",
    "section": "Load Packages",
    "text": "Load Packages\n\nlibrary(tidyverse)       # for data wrangling\nlibrary(tidymodels)      # for modeling"
  },
  {
    "objectID": "hw/Assignment1.html",
    "href": "hw/Assignment1.html",
    "title": "Homework 1",
    "section": "",
    "text": "You may discuss homework problems with other students, but you must write the assignment yourself.\nPlease combine all your answers, the computer code and the figures into one PDF file, and submit a copy to BruinLearn.\nGrading: 5 points total is 20.\nDue date: 11:59 PM April 13th 2024\nProblem 1\nOn Groundhog Day, February 2, a famous groundhog in Punxsutawney, PA is used to predict whether a winter will be long or not based on whether or not he sees his shadow. I collected data on whether he saw his shadow or not from here. I stored some of this data in this table.\nAlthough Phil is on the East Coast, I wondered if the information says anything about whether or not we will experience a rainy winter out here in California. For this, I found rainfall data, and saved it in a table. To see how this was extracted see this notebook.\n\nMake a boxplot of the mean monthly rainfall (total annual rainfall divided by 12 months) rainfall in Northern California comparing the years Phil sees his shadow versus the years he does not. In Piazza, some people used February instead of mean monthly rainfall. This is OK as well.\nConstruct a 93% confidence interval for the difference between the mean monthly rainfall (total annual rainfall divided by 12 months) in years Phil sees his shadow and years he does not. What assumptions / model are you using?\nInterpret the procedure used to construct in part 2. What do we really know about confidence intervals?\nAt level, \\(\\alpha = 0.05\\) would you reject the null hypothesis that the average rainfall in Northern California during the month of February was the same in years Phil sees his shadow versus years he does not?\nWhat assumptions are you making in forming your confidence interval and in your hypothesis test?\nQuestion 2\nIn Question 1, part 4 above, you are asked to carry out a hypothesis test. In part 5, you are asked to justify your confidence interval and hypothesis test. Both are typically based on a \\(T\\) statistic of some form.\n\nWrite functions in R to generate new data sets for the two different groups of years, calling them shadow and noshadow. The functions should be such that you can specify the average rainfall within the two years separately, as well as the variability of the rainfall within those years (for example, you might use rnorm with different mean and variance parameters).\nUsing your two functions above, simulate data under the null hypothesis that the data from shadow years is the same as the data from noshadow years, computing the \\(T\\) statistic each time. Plot a density of a sample of 5000 such \\(T\\) statistics, overlaying it with a “true” density that holds under the null hypothesis. Explain how these densities relate to the test you carried out in Question 1, part 4.\nAgain using the same two functions, simulate data under the null hypothesis that the average rainfall from shadow years is the same as the average rainfall from noshadow years, allowing for the possibility that the variability of the average is different among the two groups. The function t.test allows specifying var.equal to be true or false. Compare the density of the \\(T\\) statistics when the variability is not the same within the two groups. There are 4 possibilities (2 choices of variances for shadow and noshadow, and setting var.equal to be TRUE or FALSE). So we should see 4 histograms possibly comparing to the “true” density of part 2.\nQuestion 3\nThe data set walleye in the package alr4 (remember you may have to run install.packages(\"alr4\")) of data measured on walleye fish in Wisconsin.\n\nCreate a boxplot of length, for age in 5:8.\nCompute the sample mean, sample standard deviation length in the four groups.\nCreate a histogram of length within age of 5:8 putting the plots in a 2x2 grid in one file.\nCompute a 95% confidence interval for the difference in length in years 5 and 7. What assumptions are you making?\nAt level \\(\\alpha=10\\%\\), test the null hypothesis that the average length in the group age==5 is the same as the in the group age==7. What assumptions are you making? What can you conclude?\nRepeat the test in 5. using the function lm.\nQuestion 4 (RABE)\n\nUse the anscombe data in R. Attach the table using the command attach.\nPlot the 4 data sets (x1,y1), (x2,y2), (x3,y3), (x4,y4) on a 2-by-2 grid of plots using the commands plot and par(mfrow=c(2,2)). Add the number of the dataset to each plot as the main title on each plot.\n\nFit a regression model to the data sets:\n\ny1 ~ x1\ny2 ~ x2\ny3 ~ x3\ny4 ~ x4\n\nusing the command lm. Verify that all the fitted models have the exact same coefficients (up to numerical tolerance).\n\nUsing the command cor, compute the sample correlation for each data set.\nFit the same models in 3. but with the x and y reversed. Using the command summary, does anything about the results stay the same when you reverse x and y?\nCompute the \\(SSE, SST\\) and \\(R^2\\) value for each data set. Use the commands mean, sum, predict and / or resid. (Use the original models, i.e. y1 ~ x1 so only 4 \\(SSE\\) values)\nUsing the command abline, replot the data, adding the regression line to each plot. (Use the original models, i.e. y1 ~ x1 so only 4 plots)"
  },
  {
    "objectID": "hw/hw-1.html",
    "href": "hw/hw-1.html",
    "title": "hw-1",
    "section": "",
    "text": "Please upload your materials to be graded to BruinLearn"
  },
  {
    "objectID": "lec/Lecture01.html#todays-outline",
    "href": "lec/Lecture01.html#todays-outline",
    "title": "Welcome Statistics 101A",
    "section": "Today’s Outline",
    "text": "Today’s Outline\n\n\nWelcome\nWhat is and why regression?\nExplore Data – numerical\nExplore Data – graphical"
  },
  {
    "objectID": "lec/Lecture01.html#welcome-to-stats-101a---what-is-the-class-about",
    "href": "lec/Lecture01.html#welcome-to-stats-101a---what-is-the-class-about",
    "title": "Welcome Statistics 101A",
    "section": "Welcome to Stats 101A - What is the class about?",
    "text": "Welcome to Stats 101A - What is the class about?\n\nWe will begin with a quick review in the form of data exploration to refresh R.\nThe “data analysis” portion of 101A occurs in the context of (linear) regression models\nA regression model is a model of the relationships between some predictors and an outcome (AKA treatments and outcomes, independent and dependent variables)"
  },
  {
    "objectID": "lec/Lecture01.html#why-regression",
    "href": "lec/Lecture01.html#why-regression",
    "title": "Welcome Statistics 101A",
    "section": "Why regression?",
    "text": "Why regression?\n\n\nRegression is part of the foundation of applied statistics\nRegression (esp. Multiple Linear or MLR) provides a simple introduction to the concept of modeling relationships between a dependent variable and one or more independent variables.\nMLR is a foundation for understanding more complex models such as Neural Networks (and NN point you down the path to generative pre-trained transformers - GPTs)\nMLR is the first step for more complex modeling via interpreting the coefficients of predictors and assessing/selecting models."
  },
  {
    "objectID": "lec/Lecture01.html#an-open-mind-is-a-beautiful-mind",
    "href": "lec/Lecture01.html#an-open-mind-is-a-beautiful-mind",
    "title": "Welcome Statistics 101A",
    "section": "An open mind is a beautiful mind",
    "text": "An open mind is a beautiful mind\n\n\nMachine Learning Models (e.g., see Stats 101C) will beat old MLR on prediction every time\nStory time: a friend is trying to sell a Machine Learning Model\nDeep learning models utilize thousands to millions of parameters and non-linear transformations.\nThis complexity makes it challenging to understand how specific input features affect the output predictions.\nThe foundational knowledge from MLR can assist in interpreting metrics like feature importance, evaluating model coefficients and assessing entire models."
  },
  {
    "objectID": "lec/Lecture01.html#examples-of-recent-research",
    "href": "lec/Lecture01.html#examples-of-recent-research",
    "title": "Welcome Statistics 101A",
    "section": "Examples of recent research",
    "text": "Examples of recent research\n\nLinear Regression Analysis to predict the number of deaths in India due to SARS-CoV-2 at 6 weeks from day 0 (100 cases - March 14th 2020)\nAdaptive Reuse for Sustainable Development and Land Use: A Multivariate Linear Regression Analysis Estimating Key Determinants of Public Perceptions (2023)\nSoybean Yield Estimation and Its Components: A Linear Regression Approach (2020)\nExplainable boosted linear regression for time series forecasting Author links open overlay panel (2021)"
  },
  {
    "objectID": "lec/Lecture01.html#the-syllabus-hunt",
    "href": "lec/Lecture01.html#the-syllabus-hunt",
    "title": "Welcome Statistics 101A",
    "section": "The Syllabus Hunt",
    "text": "The Syllabus Hunt\n\n\nDo we have a TA and section?\n\nYes and Yes\n\nWhat is the TAs name?\n\nJiangliang Geng\n\nDo we have a textbook? Should I buy it?\n\nYes and no (too expensive)\n\nIs there a midterm? Is there a final?\n\nNo and Yes (does anyone know when the final is scheduled)"
  },
  {
    "objectID": "lec/Lecture01.html#the-syllabus-hunt-contd",
    "href": "lec/Lecture01.html#the-syllabus-hunt-contd",
    "title": "Welcome Statistics 101A",
    "section": "The Syllabus Hunt (cont’d)",
    "text": "The Syllabus Hunt (cont’d)\n\n\n\nWhen are office hours?\n\nWednesdays 3:30pm - 5:30pm (in person), Fridays 8:30am - 10am (Zoom), and by appointment (Zoom)\n\nWhat software should I use?\n\nEverything is written in R but if you want to solve an assignment in Python you may.\n\nCan I use ChatGPT?\n\nYes\n\nIf I get sick, what should I do?\n\nStay home and e-mail me before class to be excused if you do not have a doctor’s note"
  },
  {
    "objectID": "lec/Lecture01.html#section",
    "href": "lec/Lecture01.html#section",
    "title": "Welcome Statistics 101A",
    "section": "",
    "text": "The grade breakdown is:\n\n\n25% Five In-Class Quizzes\n\nGiven at the end of lecture in Week 2, 4, 6, 8, and 10\nWill drop your lowest score, there are no makeup quizzes\nCan be excused with acceptable documentation (e.g., doctor’s note, police report)\nIf you have CAE accommodations, you can schedule a quiz time through their office.\n\n20% Five Homework Assignments\n\nDue on Fridays in Week 2, 3, 5, 7, and 9\nWill keep all of your homework scores.\n\n20% Attending Class\n\n1% for each meeting/in class activity (19 meetings + 1 no meeting on a holiday)\nOnly excused with acceptable documentation or e-mail stating illness\n\n15% Final Exam\n\nScheduled for Wednesday June 12, 2024 3pm - 6pm\nLocation TBD around 9th week\nIf you have CAE accommodations, you should schedule your final through their office.\n\n20% Working with your TA during section.\n\nYour TA will lead you through additional material designed to augment your training.\nYour TA will determine the specific grading criteria."
  },
  {
    "objectID": "lec/Lecture01.html#group-activity-1-10-15-minutes",
    "href": "lec/Lecture01.html#group-activity-1-10-15-minutes",
    "title": "Welcome Statistics 101A",
    "section": "Group Activity 1 (10-15 minutes)",
    "text": "Group Activity 1 (10-15 minutes)\n\n\nIf you aren’t already with a group, please join/make one, minimum 3 maximum 6.\nSomeone take a team photo (selfie/grelfie/usie/0.5?) and either share it with your teammates (or everyone take their own, but that’s not very team oriented) for part of attendance credit.\nThe other part of today’s attendance credit - please try the next activity in teams (what does this mean?) and be prepared to ask questions of us or others if there is something you don’t understand. Upload a screen grab of your code and answer from R to the “descriptive basics challenge”.\nPlease visit https://stats101a.github.io/activity/RRefresher.html"
  },
  {
    "objectID": "lec/Lecture01.html#group-activity-2-if-we-have-time",
    "href": "lec/Lecture01.html#group-activity-2-if-we-have-time",
    "title": "Welcome Statistics 101A",
    "section": "Group Activity 2 (if we have time)",
    "text": "Group Activity 2 (if we have time)"
  },
  {
    "objectID": "StoryTelling.html",
    "href": "StoryTelling.html",
    "title": "StoryTelling",
    "section": "",
    "text": "We will use packages ggplot2, knitr, dplyr and tidyr"
  },
  {
    "objectID": "StoryTelling.html#dim-head-summary",
    "href": "StoryTelling.html#dim-head-summary",
    "title": "StoryTelling",
    "section": "dim(), head(), summary()",
    "text": "dim(), head(), summary()\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics 101A - Introduction to Data Analysis and Regression",
    "section": "",
    "text": "This site was produced with WebR and Quarto in RStudio and is currently hosted by GitHub.\nIt was created for the students of Statistics & Data Science 101A.\nTo learn more about Quarto websites please visit https://quarto.org/docs/websites.\nTo learn more about WebR please visit https://quarto-webr.thecoatlessprofessor.com/qwebr-first-steps.html.\nAnd this site is hosted by GitHub (free) and easy setup and maintenance https://pages.github.com/",
    "crumbs": [
      "Start Here",
      "Overview"
    ]
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "",
    "text": "Introduction\nInstructor: Vivian Lew\nOffice: Math Sciences 8923\nContact Info: vlew@stat.ucla.edu\nOffice Hours: W 3:30pm - 5:30pm (MS 8923) and F 8:30am-10am (Zoom) and you are welcome to schedule Zoom appointment(s), most evenings & weekends too\nMeeting Times and Locations: MW 2-3:15pm (Kaplan A65) plus one hour for discussion section (M 4:00P-4:50P PAB 1749 and M 5:00P-5:50P PAB 1749)\nSpring 2024 Teaching Assistant: Jialiang Geng\nThis class is an introduction to statistical modeling with an emphasis on linear regression. Regression is perhaps the most commonly used and abused statistical tool. This course will teach statistical modeling, including graphical and descriptive techniques, model fitting, model evaluation.",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#proposed-learning-outcomes",
    "href": "syllabus.html#proposed-learning-outcomes",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Proposed Learning Outcomes",
    "text": "Proposed Learning Outcomes\n\nDescribe and summarize complex data sets using R or comparable software\n\nIdentify situations in which linear models may be appropriate models for data in bivariate and multivariate scenarios.\n\nDescribe and understand how estimates for linear models are calculated.\n\nEmploy diagnostic procedures to evaluate the goodness of fit of linear models to data, identify violation(s) of assumption(s), describe and explain the consequences of lack of fit.\n\nUnderstand how and when to modify models to improve goodness of fit.\n\nConduct inferential procedures on valid linear models using R or comparable software.\n\nCorrectly interpret coefficients estimated in the context of valid linear models\n\nUse valid linear models to make predictions.\n\nCommunicate modeling results in multiple modalities (writing, conversation, video) to statistical and non-statistical audiences. Demonstrate the ability to read and understand published results related to linear models",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-materials",
    "href": "syllabus.html#course-materials",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Course Materials",
    "text": "Course Materials\nAll lecture related materials are posted to GitHub but material to be graded should be uploaded to BruinLearn. Graded material is typically in the form of PDF files, R scripts, photographs or videos. Official course grades are found online on myUCLA only.\nThe materials used (all are optional):\n\nThe Adopted Textbook (suggest opt out):\n\nWeisberg, Sanford (2014) Applied Linear Regression 4th Edition.\nUCLA Store Adopted (Opt_Out) Textbook Link\n\n\n\nOther textbooks:\n\na solid basic stats textbook\nR for Data Science: Import, Tidy, Transform, Visualize, and Model Data 2nd Edition",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#grading",
    "href": "syllabus.html#grading",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Grading",
    "text": "Grading\nGrades are assigned according to UCLA’s guidelines slightly modified:\n\n\n\ngrading\n\n\n\nThe grade breakdown is:\n\n25% Five In-Class Quizzes\n\nGiven at the end of lecture in Week 2, 4, 6, 8, and 10\nWill drop your lowest score, there are no makeup quizzes\nCan be excused with acceptable documentation (e.g., doctor’s note, police report)\nIf you have CAE accommodations, you can schedule a quiz time through their office.\n\n20% Five Homework Assignments\n\nDue on Fridays in Week 2, 3, 5, 7, and 9\nWill keep all of your homework scores.\n\n20% Attending Class\n\n1% for each meeting/in class activity (19 meetings + 1 no meeting on a holiday)\nOnly excused with acceptable documentation or e-mail stating illness\n\n15% Final Exam\n\nScheduled for Wednesday June 12, 2024 3pm - 6pm\nLocation TBD around 9th week\nIf you have CAE accommodations, you should schedule your final through their office.\n\n20% Working with your TA during section.\n\nYour TA will lead you through additional material designed to augment your training.\nYour TA will determine the specific grading criteria.\n\n\n\n\nLate Policy\nIf you submit your homework assignments after the due date but before we start grading, the homework will not be counted as late. After grading begins, unsubmitted assignments are designated as late and are not accepted.",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-outline-this-is-subject-to-change",
    "href": "syllabus.html#course-outline-this-is-subject-to-change",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Course Outline (this is subject to change)",
    "text": "Course Outline (this is subject to change)\n\n\n\nDate\nTopics\nReading\n\n\n\n\nWeek 1 4/1\nFirst Day business; some motivation; Preparation; EDA/data viz with ggplot2\nCh 1 Weisberg, Ch 1 R4DS\n\n\nWeek 2 4/8\nSimple linear regression, estimation, inference Tidymodels, Quiz 1; HW 1 due\nCh 2.1-2.5 , Weisberg, Ch 10 R4DS, Tidymodels\n\n\nWeek 3 4/15\nSimple regression prediction, simulation based inference, evaluation diagnostics; HW 2 due\nCh 2.6-2.8 Weisberg\n\n\nWeek 4 4/22\nRegression & Linear Algebra; Multiple Linear Regression( MLR) ; Quiz 2\nCh 5 Applied Linear Statistical Models, Ch 3.1-3.5 Weisberg\n\n\nWeek 5 4/29\nMLR evaluation, limitations, Transformations;HW 3 due\nCh 4.1- 4.5 Weisberg\n\n\nWeek 6 5/6\nPolynomials, Qualitative variables; Quiz 3\n(parts of) Ch 5 & 6 Weisberg\n\n\nWeek 7 5/13\nFeature Engineering, Cross Validation; HW 4 due\nTidy Modeling with R Ch. 8 and 10\n\n\nWeek 8 5/20\nProblems in MLR, recognizing violations; Quiz 4\n(parts of) Ch 7 & 8 Weisberg\n\n\nWeek 9 5/27\nHoliday (no meeting); Correlated Errors, Time Series; HW 5 due\nChap 9 of Sheather\n\n\nWeek 10 6/3\nLogistic Regression; Quiz 5\nAny Introduction to Logistic Regression (e.g. Ch 1& 2 of Applied Logistic Regression by Hosmer and Lemeshow)\n\n\nFinals 6/10\nFinal Exam June 12, 2024 Wednesday 3pm-6pm (room TBD)",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#academic-dishonesty",
    "href": "syllabus.html#academic-dishonesty",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Academic Dishonesty",
    "text": "Academic Dishonesty\nAs Bruins, we uphold the UCLA Student Code of Conduct. Academic dishonesty means activities like plagiarism, unauthorized material used on exams, unauthorized collaborations etc. According to Senate Regulation A-306, if an instructor encounters a problem, the instructor must report it to the Dean of Students.\n\nhttps://www.deanofstudents.ucla.edu/Student-Conduct#10690514-student-conduct-code\nhttps://ucla.app.box.com/s/8xq1jyrvqhs9343e4rzyvporx9lt8u1g\n\n\nChatGPT policy\nYour instructor’s belief is ChatGPT should be used – wisely – as if it were an amazingly clever tutor or friend. But copying and pasting the code of the first example’s (below) ChatGPT response is not learning and chances are, you won’t remember how to do it if you do not do it regularly. Asking ChatGPT questions in the second way gives your mind the opportunity to develop the skills scaffolding and retain the knowledge long after this course is over.\n\n\n\n\n\n\n\nQuestion\nResponse\n\n\n\n\nPlease write some code in R that splits a dataset into test and training.\nTo split a dataset into training and test sets in R, you commonly use a function like createDataPartition from the caret package:  Using the caret package  First, install and load the caret package if you haven’t already:  install.packages(“caret”)  library(caret)  Next, use the createDataPartition function to create a list of indices for the training set, then use these indices to create the training and test sets:  # Load the necessary package library(caret) # Load or import your dataset (replace ‘your_dataset’ with your actual dataset)  # data &lt;- read.csv(“path/to/your/dataset.csv”)  # Create the data partition  set.seed(123) # Set seed for reproducibility  trainIndex &lt;- createDataPartition(data$your_target_variable, p = .8, list = FALSE, times = 1)  # Create training and test datasets trainData &lt;- data[ trainIndex,] testData &lt;- data[-trainIndex,] Replace your_target_variable with the name of the column that contains the target variable you’re interested in, and replace data with your dataset name.\n\n\nPlease teach me on how to write code using base R that splits a dataset into training and test with a 70-30 split - but don’t write the code for me, I want to learn how to think it through on my own.\nAbsolutely, I’d be glad to guide you on how to approach this!   1. Understanding the Data: - Before you begin, familiarize yourself with the dataset. Use functions like str(), head(), and summary() to understand the structure and contents of your data.  2. Setting a Seed: - To ensure that your results are reproducible, you will want to set a seed using the set.seed() function. This function controls the random number generator in R.  3. Determining the Number of Rows: - You need to know the total number of rows in your dataset to create the splits. The nrow() function can help you determine this.  4. Calculating Split Sizes: - Next, determine how many rows should go into your training and test sets. You’ll want 70% of the data to be in the training set and 30% in the test set. Use arithmetic operations to calculate the respective sizes.  5. Creating a Random Sample of Indices: - To create your training set, you’ll need to randomly select 70% of the indices (row numbers) from your dataset. You can use the sample() function to do this. Remember to use the total number of rows and the size of the training set as parameters in this function.  6. Subsetting the Dataset: - Once you have a vector of random indices, use it to subset your dataset into two parts: one for training and one for testing. In R, you can subset a data frame using square brackets []. You’ll use the vector of random indices to select rows for the training set, and the - operator to select the remaining rows for the test set.  7. Verifying Your Split: - After creating your training and test sets, verify that you’ve split the data correctly. Use the dim() function to check the dimensions of each set and ensure the split ratio is approximately 70-30. You can also use the head() function to quickly view the top rows of each set and ensure they look correct.   Remember to write your code step by step, verifying each part before moving on to the next, to avoid confusion and ensure accuracy. Once you are confident in your understanding of each step, try to write the code on your own. Good luck!\n\n\n\nChatGPT is also a wonderful tool to help you with subjects that are outside of your skill set which do not make sense for you to invest huge amounts of time or resources remembering/learning.",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#covid-19-health-and-safety",
    "href": "syllabus.html#covid-19-health-and-safety",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "COVID-19 health and safety",
    "text": "COVID-19 health and safety\nIn compliance with Los Angeles County policies effective January 6 2023, UCLA strongly recommends indoor masking, regardless of vaccination status. Testing is also strongly encouraged. See\n\nhttps://covid-19.ucla.edu/covid-protocols-at-a-glance/\nhttp://publichealth.lacounty.gov/phcommon/public/media/mediapubHPdisplay.cfm\n\nSome of us might feel more comfortable wearing masks and continuing to social distance, for example, during small-group work in class or section. All of our preferences are reasonable, and it is important that we treat each others’ preferences with respect and care so that we each feel comfortable and prepared to learn in class. You can find the most current policies on campus requirements on the UCLA COVID-19 resources site https://covid-19.ucla.edu/.",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#accessible-education",
    "href": "syllabus.html#accessible-education",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Accessible Education",
    "text": "Accessible Education\nStudents with accessibility issues are welcome and encouraged to seek accommodation. Students needing academic accommodations based on a documented disability should contact the Center for Accessible Education (CAE) at (310)825-1501 or in person at Murphy Hall A255. In order to ensure accommodations, students need to contact CAE within the first two weeks of the term.",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#resources-for-students-dealing-with-financial-stress",
    "href": "syllabus.html#resources-for-students-dealing-with-financial-stress",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Resources for Students Dealing with Financial Stress",
    "text": "Resources for Students Dealing with Financial Stress\nLife is unpredictable and can create financial emergencies. If you find yourself in this situation, please seek assistance:\n• Bruin Shelter: http://www.bruinshelter.org/ Provides a safe, supportive environment for fellow college students experiencing homelessness by fostering a collaborative effort between universities, community-based organizations, and service providers.\n• The CPO Food Shelter: https://basicneeds.ucla.edu/services/cpo-food-closet Provides free food for any UCLA student who may be experiencing hunger and/or struggling to attain food due to financial hardships.",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#title-ix-resources",
    "href": "syllabus.html#title-ix-resources",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Title IX Resources",
    "text": "Title IX Resources\nUCLA prohibits gender discrimination, including sexual harassment, domestic and dating violence, sexual assault, and stalking. If you have experienced sexual harassment or sexual violence, there are a variety of resources to assist you.\n• CONFIDENTIAL RESOURCES: You can receive confidential support and advocacy at the CARE Advocacy Office for Sexual and Gender-Based Violence, 1st Floor Wooden Center West, (310) 206-2465. Counseling and Psychological Services (CAPS) also provides confidential counseling to all students and can be reached 24/7 at (310) 825-0768.\n• NON-CONFIDENTIAL RESOURCES: You can also report sexual violence or sexual harassment directly to the University’s Title IX Coordinator, 2241 Murphy Hall, titleix@conet.ucla.edu, (310) 206-3417. Reports to law enforcement can be made to UCPD at (310) 825-1491. These offices may be required to pursue an official investigation.",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#psychological-health-well-being-and-resilience",
    "href": "syllabus.html#psychological-health-well-being-and-resilience",
    "title": "Stats 101A Spring 2024 Syllabus",
    "section": "Psychological Health, Well-Being and Resilience",
    "text": "Psychological Health, Well-Being and Resilience\nUCLA is renowned for academic excellence, and yet we know that many students feel overwhelmed at times by demands to succeed academically, socially and personally. Our campus community is committed to helping all students thrive, learn to cope with stress, and build resilience. Remember, self-care is a skill that is critical to your long-term success. Here are some of the many resources available at UCLA to support you:\n• Counseling and Psychological Services (CAPS): https://www.counseling.ucla.edu/ Provides counseling and other psychological/mental health services to students. Walk-in hours are Monday-Thursday 8am-4:30pm and Friday 9am-4:30pm in John Wooden Center West. Crisis counseling is also available 24 hours/day at (310) 825-0768.\n• Ashe Student Health and Wellness Center: http://www.studenthealth.ucla.edu Provides high quality and accessible ambulatory healthcare and education by caring professionals to support the academic success and personal development of all UCLA students.\n• Healthy Campus Initiative (HCI): https://healthy.ucla.edu Provides links to a wide variety of resources for enhancing physical and psychological well-being, positive social interactions, healthy sleep, healthy eating, healthy physical activity and more.\n• Campus and Student Resilience: https://risecenter.ucla.edu/ Provides programs to promote resilience and trains students to help support their peers.\n• UCLA Recreation: https://www.recreation.ucla.edu/ Offers a broad array of services and programs including fitness, yoga, dance, martial arts, meditation, sports, and much more.\n• Equity, Diversity and Inclusion: https://equity.ucla.edu/ Committed to providing an equal learning, working and living environment at UCLA and supports a range of programs to promote these goals campus-wide.",
    "crumbs": [
      "Start Here",
      "Spring 2024 Syllabus"
    ]
  }
]